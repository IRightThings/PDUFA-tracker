// PDUFA Tracker Database Schema
// This defines the complete database structure for production

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Companies (Biotech/Pharma companies)
model Company {
  id                String             @id @default(cuid())
  ticker            String             @unique
  name              String
  marketCap         BigInt?
  marketCapCategory MarketCapCategory?
  sector            String?
  industry          String?
  cik               String?            @unique // SEC Central Index Key
  description       String?
  website           String?
  headquarters      String?
  employeeCount     Int?
  foundedYear       Int?
  
  // Relationships
  pdufaEvents       PDUFAEvent[]
  clinicalTrials    ClinicalTrial[]
  newsArticles      NewsArticle[]
  secFilings        SECFiling[]
  
  // Metadata
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  
  @@map("companies")
  @@index([marketCapCategory])
  @@index([ticker])
  @@index([name])
}

// PDUFA Events (Main calendar events)
model PDUFAEvent {
  id                  String         @id @default(cuid())
  companyId           String
  company             Company        @relation(fields: [companyId], references: [id], onDelete: Cascade)
  
  // Drug information
  drugName            String
  genericName         String?
  indication          String
  nda                 String?        // New Drug Application number
  bla                 String?        // Biologics License Application number
  
  // PDUFA details
  pdufaDate           DateTime
  eventType           PDUFAEventType
  status              PDUFAStatus
  priorityReview      Boolean        @default(false)
  fastTrack           Boolean        @default(false)
  breakthroughTherapy Boolean        @default(false)
  orphanDesignation   Boolean        @default(false)
  
  // AI Analysis (Future)
  approvalProbability Float?         // 0.0 to 1.0
  riskLevel           RiskLevel?
  confidenceScore     Float?         // AI model confidence
  analystNotes        String?
  
  // Data sources
  source              String         // 'openFDA', 'SEC', 'manual', 'clinicaltrials'
  sourceUrl           String?
  fdaUrl              String?
  
  // Metadata
  createdAt           DateTime       @default(now())
  updatedAt           DateTime       @updatedAt
  
  @@map("pdufa_events")
  @@index([pdufaDate])
  @@index([companyId])
  @@index([status])
  @@index([eventType])
  @@index([approvalProbability])
}

// Clinical Trials (for AI analysis)
model ClinicalTrial {
  id                String    @id @default(cuid())
  nctId             String    @unique // ClinicalTrials.gov ID
  companyId         String?
  company           Company?  @relation(fields: [companyId], references: [id])
  
  // Trial details
  title             String
  phase             String?
  status            String?
  condition         String?
  intervention      String?
  
  // Dates
  startDate         DateTime?
  completionDate    DateTime?
  estimatedPDUFADate DateTime?
  
  // Results (for AI analysis)
  primaryEndpointMet Boolean?
  pValue            Float?
  statisticalSignificance Boolean?
  safetyProfile     String?
  
  // Metadata
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  
  @@map("clinical_trials")
  @@index([nctId])
  @@index([companyId])
  @@index([phase])
  @@index([completionDate])
}

// News Articles (for sentiment analysis)
model NewsArticle {
  id                String    @id @default(cuid())
  title             String
  url               String    @unique
  content           String?
  summary           String?
  
  // Classification
  source            String
  category          String?
  pdufaRelated      Boolean   @default(false)
  sentimentScore    Float?    // -1.0 to 1.0
  
  // Associations
  companiesId       String[]  // Array of company IDs mentioned
  companies         Company[] @relation(references: [id])
  
  // Dates
  publishedAt       DateTime
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  
  @@map("news_articles")
  @@index([publishedAt])
  @@index([pdufaRelated])
  @@index([sentimentScore])
}

// SEC Filings (for sentiment analysis)
model SECFiling {
  id            String    @id @default(cuid())
  companyId     String
  company       Company   @relation(fields: [companyId], references: [id])
  
  // Filing details
  filingType    String    // 10-K, 10-Q, 8-K, etc.
  accessionNumber String  @unique
  filingDate    DateTime
  url           String
  
  // Analysis
  pdufaMentions Int       @default(0)
  sentimentScore Float?   // Management confidence
  keyPhrases    String[]  // Important extracted phrases
  
  // Metadata
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  @@map("sec_filings")
  @@index([companyId])
  @@index([filingDate])
  @@index([pdufaMentions])
}

// User Management (Future)
model User {
  id                String    @id @default(cuid())
  email             String    @unique
  name              String?
  
  // Subscription
  plan              UserPlan  @default(FREE)
  stripeCustomerId  String?   @unique
  subscriptionId    String?   @unique
  subscriptionStatus SubscriptionStatus @default(INACTIVE)
  currentPeriodEnd  DateTime?
  
  // Preferences
  watchlist         String[]  // Company tickers
  alertPreferences  Json?
  notifications     NotificationPreferences @default(EMAIL)
  timezone          String?   @default("America/New_York")
  
  // Feature Usage (for analytics)
  apiCallsThisMonth Int       @default(0)
  lastAPICall       DateTime?
  
  // Metadata
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  lastLoginAt       DateTime?
  
  // Relations
  alerts            Alert[]
  
  @@map("users")
}

// Alert System (Future)
model Alert {
  id            String      @id @default(cuid())
  userId        String
  user          User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  // Alert Configuration
  type          AlertType
  companyTicker String?     // For company-specific alerts
  eventTypes    String[]    // PDUFA, ADCOM, etc.
  daysAdvance   Int         @default(7)
  
  // Delivery
  enabled       Boolean     @default(true)
  channels      String[]    // email, push, sms
  
  // Metadata
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  lastTriggered DateTime?
  
  @@map("alerts")
}

// Data Sync Tracking
model SyncLog {
  id            String    @id @default(cuid())
  source        String    // 'openFDA', 'clinicaltrials', 'sec'
  status        String    // 'success', 'failed', 'partial'
  
  // Statistics
  recordsProcessed Int    @default(0)
  recordsAdded     Int    @default(0)
  recordsUpdated   Int    @default(0)
  errors           Int    @default(0)
  
  // Details
  errorMessages    String[]
  duration         Int?    // seconds
  
  // Metadata
  startedAt        DateTime
  completedAt      DateTime?
  createdAt        DateTime @default(now())
  
  @@map("sync_logs")
  @@index([source])
  @@index([startedAt])
}

// Enums
enum MarketCapCategory {
  MICRO     // $50M - $200M
  SMALL     // $200M - $2B
  LARGE     // $2B+
}

enum PDUFAEventType {
  PDUFA     // Standard PDUFA date
  ADCOM     // Advisory Committee meeting
  CRL       // Complete Response Letter
  APPROVAL  // Drug approval
  DELAY     // Date postponement
}

enum PDUFAStatus {
  PENDING
  APPROVED
  CRL_ISSUED
  DELAYED
  WITHDRAWN
  CANCELLED
}

enum RiskLevel {
  LOW       // High probability of approval
  MEDIUM    // Moderate uncertainty
  HIGH      // Significant approval risk
}

enum UserPlan {
  FREE
  PREMIUM
  ENTERPRISE
}

enum SubscriptionStatus {
  INACTIVE
  ACTIVE
  PAST_DUE
  CANCELED
  PAUSED
}

enum NotificationPreferences {
  EMAIL
  PUSH
  SMS
  ALL
  NONE
}

enum AlertType {
  PDUFA_UPCOMING
  COMPANY_NEWS
  MARKET_CAP_CHANGE
  NEW_TRIALS
  APPROVAL_PREDICTION
}
